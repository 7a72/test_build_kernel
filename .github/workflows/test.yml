name: Build OnePlus 12 Kernel

on:
  workflow_dispatch:

jobs:
  build-kernel-with-mksu:
    runs-on: ubuntu-latest

    steps:
      - name: Set Swap
        run: |
          export SWAP_FILE=$(swapon --show=NAME | tail -n 1)
          sudo swapoff $SWAP_FILE
          sudo rm -rf $SWAP_FILE
          sudo fallocate -l 16G /swap_filex
          sudo chmod 600 /swap_filex
          sudo mkswap /swap_filex
          sudo swapon /swap_filex
          df -h
          free -h

      - name: Install Dependencies
        run: |
          sudo apt update
          sudo apt install -y python3 git libelf-dev dwarves
          curl https://storage.googleapis.com/git-repo-downloads/repo > ~/repo
          chmod a+x ~/repo
          sudo mv ~/repo /bin/repo

      - name: Set Environment Variable
        run: |
          echo "BUILD_TIME=$(date "+%y%m%d%H")" >> $GITHUB_ENV
          echo "KBUILD_BUILD_USER=7a72" >> $GITHUB_ENV
          echo "KBUILD_BUILD_HOST=action" >> $GITHUB_ENV
          sudo mkdir -p /mnt/kernel_workspace
          sudo chmod 0777 /mnt/kernel_workspace
          
          git config --global user.email "${{ env.KBUILD_BUILD_USER }}@${{ env.KBUILD_BUILD_HOST }}"
          git config --global user.name "${{ env.KBUILD_BUILD_HOST }}"

      - name: Download the Pre-built Toolchain
        run: |
          echo "Changing to directory: /mnt/kernel_workspace..."
          cd "/mnt/kernel_workspace"
          mkdir toolchain
          cd toolchain
          wget https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/+archive/refs/heads/main/clang-r536225.tar.gz
          tar axf clang-r536225.tar.gz 
          rm clang-r536225.tar.gz 

      - name: Sync the Kernel Source Code
        run: |
          echo "Changing to directory: /mnt/kernel_workspace..."
          cd "/mnt/kernel_workspace"
          
          echo "Sync kernel source"
          git clone --depth 1 https://github.com/yaap/kernel_oneplus_sm8650.git -b fifteen kernel
          
          echo "Pre-modify"
          rm -rf ./kernel/android/abi_gki_protected_exports_* || echo "No protected exports!"
          sed -i 's/check_defconfig//' kernel/build.config.gki
          sed -i '$s|echo "\$res"|echo "-zsck"|'  kernel/scripts/setlocalversion || true

      - name: Add KernelSU
        run: |
          echo "Changing to directory: /mnt/kernel_workspace/kernel..."
          cd "/mnt/kernel_workspace/kernel"
          
          echo "Adding KernelSU..."
          #curl -LSs "https://raw.githubusercontent.com/backslashxx/KernelSU/magic/kernel/setup.sh" | bash -s magic
          curl -LSs "https://raw.githubusercontent.com/5ec1cff/KernelSU/main/kernel/setup.sh" | bash -
          cd ./KernelSU/
          KSU_VERSION=$(expr $(/usr/bin/git rev-list --count HEAD) "+" 10200)
          echo "KSUVER=$KSU_VERSION" >> $GITHUB_ENV
          sed -i "s/DKSU_VERSION=16/DKSU_VERSION=${KSU_VERSION}/" kernel/Makefile
          
          echo "Reverting commit"
          git revert -m 1 $(git log --grep="remove devpts hook" --pretty=format:"%h") -n

      - name: Add Configuration Settings
        run: |
          echo "Changing to directory: /mnt/kernel_workspace/kernel..."
          cd "/mnt/kernel_workspace/kernel"

          wget https://github.com/lateautumn233/Common-Android-Kernel-Tree/commit/a72032ecf33c63d8a4abb64b08c1a0b847c82a32.patch -O cgroup.patch
          patch -p1 < cgroup.patch
          wget https://github.com/lateautumn233/Common-Android-Kernel-Tree/commit/0ac686b9e81ba331c2ad9b420fd21262a80daaa4.patch -O sysvipc.patch
          patch -p1 < sysvipc.patch
          wget https://raw.githubusercontent.com/wings110/oplus-kernesu-next-susfs/refs/heads/main/patches/gki_defconfig
          cat gki_defconfig > ./arch/arm64/configs/gki_defconfig
          echo "Adding configuration settings to gki_defconfig..."
          #echo "CONFIG_PID_NS=y" >> ./arch/arm64/configs/gki_defconfig
          #echo "CONFIG_POSIX_MQUEUE=y" >> ./arch/arm64/configs/gki_defconfig
          #echo "CONFIG_IPC_NS=y" >> ./arch/arm64/configs/gki_defconfig
          # echo "CONFIG_USER_NS=y" >> ./arch/arm64/configs/gki_defconfig
          # echo "CONFIG_BPF_STREAM_PARSER=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_SYSVIPC=y" >> ./arch/arm64/configs/gki_defconfig
          #echo "CONFIG_CGROUP_DEVICE=y" >> ./arch/arm64/configs/gki_defconfig
           
          
          cat ./arch/arm64/configs/gki_defconfig

      - name: Build the Kernel
        run: |
          echo "Changing to configuration directory: /mnt/kernel_workspace/kernel..."
          cd "/mnt/kernel_workspace/kernel"
          
          # echo "Clean dirty"
          # git add -A
          # git commit -s -a -m "build"
          
          export PATH=/mnt/kernel_workspace/toolchain/bin:$PATH
          type clang
          
          echo "Building the kernel..."
          # python3 build_with_bazel.py -t pineapple gki --config=${{ github.event.inputs.CONFIG }} --lto=${{ github.event.inputs.LTO }} -o "$(pwd)/../out"
          
          kargs="ARCH=arm64 CC=clang LLVM=1 LLVM_IAS=1 -j$(nproc --all) O=out KBUILD_BUILD_HOST=${{ env.KBUILD_BUILD_HOST }} KBUILD_BUILD_USER=${{ env.KBUILD_BUILD_USER }}"
          make $kargs gki_defconfig vendor/pineapple_GKI.config vendor/oplus/pineapple_GKI.config vendor/oplus/waffle.config # Build the kernel config
          make $kargs # Build the kernel itself
          make $kargs modules_install INSTALL_MOD_PATH=/mnt/kernel_workspace/Kernel_Prebuilts # Save the kernel modules to out/Kernel_Prebuilts/lib/modules
          make $kargs install INSTALL_PATH=/mnt/kernel_workspace/Kernel_Prebuilts # Save the kernel image(s) and devicetrees to ./Kernel_Prebuilts/boot hopefully
          make $kargs headers_install INSTALL_HDR_PATH=/mnt/kernel_workspace/Kernel_Prebuilts/usr # Save the kernel headers to out/Kernel_Prebuilts/usr
          pwd
          ls
          cp ./out/arch/arm64/boot/Image /mnt/kernel_workspace/Image

      - name: Create AnyKernel3
        run: |
          echo "Changing to configuration directory: /mnt/kernel_workspace/..."
          cd "/mnt/kernel_workspace/"
          
          git clone https://github.com/Kernel-SU/AnyKernel3 --depth=1
          
          echo "Copying Image"
          cp /mnt/kernel_workspace/Image ./AnyKernel3/Image

      - name: Upload AnyKernel3
        uses: actions/upload-artifact@v4
        with:
          name: AnyKernel3-OP12-6.1-MKSU-${{ env.KSUVER }}-${{ env.BUILD_TIME }}
          path: /mnt/kernel_workspace/AnyKernel3/*

      - name: Upload Image
        uses: actions/upload-artifact@v4
        with:
          name: Image-${{ env.BUILD_TIME }}
          path: /mnt/kernel_workspace/Image
